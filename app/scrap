        /*var lib = data.split('~');
        var mousex = lib[0];
        var mousey = lib[1];
        var cellSize = lib[2];
        var zonex = lib[3];
        var zoney = lib[4];
        var gridW = lib[5];
        var gridH = lib[6];
        var color = lib[7];
        var client = lib[8];

        for (var i = 9; i < lib.length; i++) {    
            var xy = lib[i].split('$');
            gol.iORunLibInput(mousex, mousey, xy[0], xy[1], color, zonex, 
                zoney, gridW, gridH, client, cellSize);
        }*/











/**
 * Mouse events or listeners.
 */
var MouseUtils = function() {

    var _GOL;

    this.init = function(gol) {
        _GOL = gol;
    };

    this.canvasClicked = function(e) {

        /*
        if (_GOL.isAllowLibTransfer() === false) return;

        var displayZone = _GOL.getDisplayZone();
        var x = e.clientX - _GOL.getCanvas().clientLeft;
        var y = e.clientY - _GOL.getCanvas().clientTop;

        // The following code works for Chrome & FF. A more basic version above.
        //var x = e.clientX; // + document.body.scrollLeft + document.documentElement.scrollLeft;
        //var y = e.clientY; // + document.body.scrollTop + document.documentElement.scrollTop;
        
        x -= _GOL.getCanvas().offsetLeft;
        y -= _GOL.getCanvas().offsetTop;
        _GOL.setMouseX(x);
        _GOL.setMouseY(y);

        if (_GOL.isLibTransfer() === true) {

            var pattern = new Pattern(x, y, _GOL.getCellSize(), displayZone[0], displayZone[1],
                _GOL.getGridWidth(), _GOL.getGridHeight(), _GOL.getCellColor(), 
                _GOL.getNickName(), _GOL.getXyFromLibStringValue());
            _GOL.getSocket().emit('hashmap-append', pattern.toJSON());
            _GOL.setLibTransfer(false);
            _GOL.setAllowLibTransfer(false);
            cursorDeny();
        }
        */
    };
}